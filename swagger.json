{
  "openapi": "3.0.2",

  "info": {
    "version": "1.0.0",
    "title": "Wallet API Docs",
    "description": "Showing off all Wallet APIs",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },

  "consumes": ["application/json"],
  "produces": ["application/json"],

  "servers": [
    { "url": "https://final-project-back.herokuapp.com"},
    { "url": "http://localhost:3000" }
  ],

  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Contacts",
      "description": "Contacts endpoints"
    }
  ],

  "paths": {

    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Registration object",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Succesfull Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse201"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationLoginError400"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationError409"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError500"
                }
              }
            }
          }
        }
      }
    },

    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Login object",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succesfull Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationLoginError400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginError401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError500"
                }
              }
            }
          }
        }
      }
    },

    "/api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User Logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Succesfull Operation"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutError401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError500"
                }
              }
            }
          }
        }
      }
    }

  },

  "components": {
    "schemas": {

      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User Password",
            "example": "password"
          }
        }
      },

      "RegistrationResponse201": {
        "type": "object",
        "required": ["status", "code", "data"],
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "User registered"
          },
          "code": {
            "type": "number",
            "description": "Status code",
            "example": 201
          },
          "data": {
            "type": "object",
            "description": "Response data",
            "properties": {
              "user": {
                "type": "object",
                "description": "User data",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "format": "email"
                  },
                  "balance": {
                    "type": "number",
                    "description": "User balance"
                  }
                }
              }
            }
          }
        }
      },

      "RegistrationLoginError400": {
        "type": "object",
        "required": ["status", "code", "message"],
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "Bad parameters"
          },
          "code": {
            "type": "number",
            "description": "Status code",
            "example": 400
          },
          "message": {
            "type": "string",
            "description": "Response description",
            "example": "\"email\" is required"
          }
        }
      },

      "RegistrationError409": {
        "type": "object",
        "required": ["status", "code", "message"],
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "Error"
          },
          "code": {
            "type": "number",
            "description": "Status code",
            "example": 409
          },
          "message": {
            "type": "string",
            "description": "Response description",
            "example": "Email in use"
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "password"
          }
        }
      },

      "LoginResponse200": {
        "type": "object",
        "required": ["status", "code", "data"],
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "User logged in"
          },
          "code": {
            "type": "number",
            "description": "Status code",
            "example": 200
          },
          "data": {
            "type": "object",
            "description": "Response data",
            "properties": {
              "token": {
                "type": "string",
                "description": "Authorization token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOTM5ZTYzOGE5N2UyZGE5ZGJlZDkyYyIsImlhdCI6MTYzNzA2NzcwNn0.zSESkfGn2d-lz4WFNnUmWh3rZSoA0zEPR9CYb2Cw7N8"
              },
              "user": {
                "type": "object",
                "description": "User data",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "format": "email"
                  },
                  "balance": {
                    "type": "number",
                    "description": "User balance"
                  }
                }
              }
            }
          }
        }
      },

      "LoginError401": {
        "type": "object",
        "required": ["status", "code", "message"],
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "Error"
          },
          "code": {
            "type": "number",
            "description": "Status code",
            "example": 401
          },
          "message": {
            "type": "string",
            "description": "Response description",
            "example": "Email or password is wrong"
          }
        }
      },

      "LogoutError401": {
        "type": "object",
        "required": ["status", "code", "message"],
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "Error"
          },
          "code": {
            "type": "number",
            "description": "Status code",
            "example": 401
          },
          "message": {
            "type": "string",
            "description": "Response description",
            "example": "Invalid token"
          }
        }
      },

      "InternalServerError500": {
        "type": "object",
        "required": ["status", "code", "message"],
        "properties": {
          "status": {
            "type": "string",
            "description": "Operation status",
            "example": "Error"
          },
          "code": {
            "type": "number",
            "description": "Status code",
            "example": 500
          },
          "message": {
            "type": "string",
            "description": "Response description",
            "example": "Server error"
          }
        }
      }

    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
